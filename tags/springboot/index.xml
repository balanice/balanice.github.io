<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Springboot on Balanice&#39;s Blog</title>
    <link>https://balanice.github.io/tags/springboot/</link>
    <description>Recent content in Springboot on Balanice&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 13 Jul 2022 10:24:51 +0800</lastBuildDate><atom:link href="https://balanice.github.io/tags/springboot/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Vscode Tips</title>
      <link></link>
      <pubDate>Wed, 13 Jul 2022 10:24:51 +0800</pubDate>
      
      <guid></guid>
      <description>记录 vscode 使用过程中遇到的一些问题及解决方案
设置 maven 的镜像地址 找到 maven 安装路径下的 settings.xml, 比如我的环境是: /opt/maven/conf/settings.xml; 找一个镜像源贴到 mirrors 节点里面, 比如我使用的是华为镜像: &amp;lt;mirrors&amp;gt; ... &amp;lt;mirror&amp;gt; &amp;lt;id&amp;gt;huaweicloud&amp;lt;/id&amp;gt; &amp;lt;mirrorOf&amp;gt;*&amp;lt;/mirrorOf&amp;gt; &amp;lt;url&amp;gt;https://repo.huaweicloud.com/repository/maven/&amp;lt;/url&amp;gt; &amp;lt;/mirror&amp;gt; ... &amp;lt;/mirrors&amp;gt; 将路径 /opt/maven/conf/settings.xml 填入 Settings -&amp;gt; Extensions -&amp;gt; Java -&amp;gt; Configuration -&amp;gt; Maven:User Settings 中; The Language Support for Java server crashed &amp;hellip; 问题 环境: ArchLinux 版本: 1.69.0 Java: OpenJDK-18.0.1.1 Maven: 3.8.6 解决方法: 取消勾选 Settings -&amp;gt; Java -&amp;gt; Jdt -&amp;gt; Ls -&amp;gt; Lombok Support: Enabled
参考方案</description>
    </item>
    
    <item>
      <title>使用 minicap 搭建远程操作网站</title>
      <link>https://balanice.github.io/post/use-minicap-build-test-server/</link>
      <pubDate>Sat, 27 Mar 2021 08:12:37 +0800</pubDate>
      
      <guid>https://balanice.github.io/post/use-minicap-build-test-server/</guid>
      <description>技术选型 我们本次使用 minicap 获取手机屏幕内容, 使用 SpringBoot 实现网站服务, ddmlib 来对手机进行操作, WebSocket 传输图片数据, JavaScript + Html 实现前端界面.
实现 添加依赖 &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-boot-starter-websocket&amp;lt;/artifactId&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;com.android.tools.ddms&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;ddmlib&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;27.1.3&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; 创建 WebSocket 服务端 使用 WebSocket 传输数据, 在连接上时候启动 minicap, 接受并解析 minicap 数据, 在检测到 WebSocket 关闭或发生错误时候关闭 minicap, 代码如下: @Component @ServerEndpoint(&amp;#34;/screen&amp;#34;) public class MiniWebSocket { private static final Logger logger = LoggerFactory.getLogger(MiniWebSocket.class); @OnOpen public void onOpen(Session session) { logger.info(&amp;#34;onOpen&amp;#34;); SpringContextUtil.getBean(DeviceService.class).startScreen(session); } @OnMessage public void onMessage(Session session, String message) { logger.</description>
    </item>
    
    <item>
      <title>slf4j &#43; logback 记录日志</title>
      <link>https://balanice.github.io/post/slf4j-and-logback/</link>
      <pubDate>Sun, 24 Jan 2021 08:12:37 +0800</pubDate>
      
      <guid>https://balanice.github.io/post/slf4j-and-logback/</guid>
      <description>如何使用 Springboot 项目无需安装， 框架中已经集成了 slf4j 和 logback. 创建 src/main/resource/logback.xml 文件， 文件配置如下：
&amp;lt;configuration&amp;gt; &amp;lt;property name=&amp;#34;LOG_HOME&amp;#34; value=&amp;#34;logs&amp;#34;/&amp;gt; &amp;lt;appender name=&amp;#34;STDOUT&amp;#34; class=&amp;#34;ch.qos.logback.core.ConsoleAppender&amp;#34;&amp;gt; &amp;lt;encoder&amp;gt; &amp;lt;pattern&amp;gt;%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} %line - %msg%n&amp;lt;/pattern&amp;gt; &amp;lt;charset&amp;gt;utf-8&amp;lt;/charset&amp;gt; &amp;lt;/encoder&amp;gt; &amp;lt;/appender&amp;gt; &amp;lt;appender name=&amp;#34;FILE&amp;#34; class=&amp;#34;ch.qos.logback.core.rolling.RollingFileAppender&amp;#34;&amp;gt; &amp;lt;file&amp;gt;${LOG_HOME}/demo.log&amp;lt;/file&amp;gt; &amp;lt;encoder class=&amp;#34;ch.qos.logback.classic.encoder.PatternLayoutEncoder&amp;#34;&amp;gt; &amp;lt;pattern&amp;gt;&amp;#34;%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} %line - %msg%n&amp;#34;&amp;lt;/pattern&amp;gt; &amp;lt;charset&amp;gt;utf-8&amp;lt;/charset&amp;gt; &amp;lt;/encoder&amp;gt; &amp;lt;rollingPolicy class=&amp;#34;ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy&amp;#34;&amp;gt; &amp;lt;fileNamePattern&amp;gt;log/demo-%d{yyyy-MM-dd}_%i.log&amp;lt;/fileNamePattern&amp;gt; &amp;lt;maxFileSize&amp;gt;10MB&amp;lt;/maxFileSize&amp;gt; &amp;lt;/rollingPolicy&amp;gt; &amp;lt;/appender&amp;gt; &amp;lt;root level=&amp;#34;debug&amp;#34;&amp;gt; &amp;lt;appender-ref ref=&amp;#34;STDOUT&amp;#34; /&amp;gt; &amp;lt;appender-ref ref=&amp;#34;FILE&amp;#34; /&amp;gt; &amp;lt;/root&amp;gt; &amp;lt;/configuration&amp;gt; </description>
    </item>
    
  </channel>
</rss>
